<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goodday.proj.api.shop.repository.ShopMapper">
    <select id="countProductList" resultType="int">
        select count(*) from product
    </select>

    <resultMap id="productResultSet" type="com.goodday.proj.api.shop.model.Product">
        <id property="proNo" column="PRO_NO"/>
        <result property="proName" column="PRO_NAME"/>
        <result property="proContent" column="PRO_CONTENT"/>
        <result property="proPrice" column="PRO_PRICE"/>
        <result property="proInventory" column="PRO_INVENTORY"/>
        <result property="proCreateDate" column="PRO_CREATE_DATE"/>
        <association property="thumbnail" javaType="com.goodday.proj.api.file.model.UploadFile">
            <result property="uploadFileName" column="THUMBNAIL_UPLOAD_FILE_NAME"/>
            <result property="storeFileName" column="THUMBNAIL_STORE_FILE_NAME"/>
        </association>
        <collection property="images" ofType="com.goodday.proj.api.file.model.UploadFile">
            <result property="uploadFileName" column="IMAGE_UPLOAD_FILE_NAME"/>
            <result property="storeFileName" column="IMAGE_STORE_FILE_NAME"/>
        </collection>
    </resultMap>

    <select id="selectProductList" resultMap="productResultSet">
        SELECT p.PRO_NO, p.PRO_NAME, p.PRO_CONTENT, p.PRO_PRICE, p.PRO_INVENTORY,
               p.PRO_CREATE_DATE, f1.UPLOAD_FILE_NAME AS THUMBNAIL_UPLOAD_FILE_NAME,
               f1.STORE_FILE_NAME AS THUMBNAIL_STORE_FILE_NAME, f2.UPLOAD_FILE_NAME AS IMAGE_UPLOAD_FILE_NAME,
               f2.STORE_FILE_NAME AS IMAGE_STORE_FILE_NAME
        FROM product p
                 LEFT JOIN filestore f1 ON p.PRO_NO = f1.BOARD_NO AND f1.FILE_LEVEL = 1
                 LEFT JOIN filestore f2 ON p.PRO_NO = f2.BOARD_NO AND f2.FILE_LEVEL = 2
        WHERE f1.board_type = 'PRODUCT' and f2.board_type = 'PRODUCT'
        order by pro_create_date desc
    </select>
    <insert id="save">
        insert All
        into product
        values (#{proNo}, #{proName}, #{proContent}, #{proPrice}, #{proInventory}, sysdate)
        into FILESTORE
        values (file_seq.NEXTVAL, #{thumbnail.uploadFileName}, #{thumbnail.storeFileName}, #{proNo}, 1, 'PRODUCT')
        SELECT * FROM DUAL
    </insert>

    <update id="saveImages" parameterType="java.util.Map">
        INSERT INTO filestore (FILE_NO, UPLOAD_FILE_NAME, STORE_FILE_NAME, BOARD_NO, FILE_LEVEL, BOARD_TYPE)
            select file_seq.nextval, A.* from(
        <foreach collection="images" item="item" separator="UNION ALL ">
            select #{item.uploadFileName}, #{item.storeFileName}, #{proNo}, 2, 'PRODUCT' from dual
        </foreach>
        ) A
    </update>

    <select id="findByNo" parameterType="long" resultMap="productResultSet">
        SELECT p.PRO_NO, p.PRO_NAME, p.PRO_CONTENT, p.PRO_PRICE, p.PRO_INVENTORY,
               p.PRO_CREATE_DATE, f1.UPLOAD_FILE_NAME AS THUMBNAIL_UPLOAD_FILE_NAME,
               f1.STORE_FILE_NAME AS THUMBNAIL_STORE_FILE_NAME, f2.UPLOAD_FILE_NAME AS IMAGE_UPLOAD_FILE_NAME,
               f2.STORE_FILE_NAME AS IMAGE_STORE_FILE_NAME
        FROM product p
                 LEFT JOIN filestore f1 ON p.PRO_NO = f1.BOARD_NO AND f1.FILE_LEVEL = 1
                 LEFT JOIN filestore f2 ON p.PRO_NO = f2.BOARD_NO AND f2.FILE_LEVEL = 2
        WHERE p.PRO_NO = #{proNo} and f1.board_type = 'PRODUCT' and f2.board_type = 'PRODUCT'
    </select>
    
    <delete id="deleteProductByNo">
        delete
        from product
        where pro_no = #{proNo}
    </delete>

    <delete id="deleteFileByNo">
        delete from filestore where board_no = #{proNo} and board_type = 'PRODUCT'
    </delete>

    <update id="updateFileByStoreFileName" parameterType="Map">
        update FILESTORE
        set store_file_name = #{storeFileName},
            upload_file_name = #{uploadFileName}
        where store_file_name = #{afterStoreFileName}
    </update>

    <update id="updateProduct">
        update product
        set pro_name = #{proName},
            pro_content = #{proContent},
            pro_price = #{proPrice},
            pro_inventory = #{proInventory}
        where pro_no = #{proNo}
    </update>
</mapper>