<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goodday.proj.api.member.repository.MemberMapper">

    <insert id="save">
        insert All
        into member
        values (mem_seq.NEXTVAL, #{memberId}, #{pwd}, #{name}, sysdate, #{nickname}, #{email}, #{phone}, default, default)
        <foreach collection="address" item="item" separator=",">
            INTO address
            VALUES (addr_seq.NEXTVAL, mem_seq.CURRVAL, #{item.address}, 'Y')
        </foreach>
        SELECT * FROM DUAL
    </insert>

<!--    <resultMap id="memberIdResultSet" type="com.goodday.proj.api.member.model.Member">-->
<!--        <id property="memberNo" column="MEMBER_NO"/>-->
<!--        <result property="memberId" column="MEMBER_ID"/>-->
<!--        <result property="pwd" column="PWD"/>-->
<!--        <result property="name" column="NAME"/>-->
<!--        <result property="enrollDate" column="ENROLL_DATE"/>-->
<!--        <result property="nickname" column="NICKNAME"/>-->
<!--        <result property="email" column="EMAIL"/>-->
<!--        <result property="phone" column="PHONE"/>-->
<!--        <result property="admin" column="ADMIN"/>-->
<!--        <result property="memberStatus" column="MEMBER_STATUS"/>-->
<!--        <collection column="id" property="address" ofType="com.goodday.proj.api.member.model.Address" javaType="List" select="addressList"/>-->
<!--    </resultMap>-->

<!--    <select id="findById" resultMap="memberIdResultSet">-->
<!--        SELECT distinct member.MEMBER_NO, MEMBER_ID, PWD, NAME, ENROLL_DATE, NICKNAME, email, PHONE, ADMIN, address-->
<!--        FROM member-->
<!--                 LEFT JOIN address ON member.MEMBER_NO = address.MEMBER_NO-->
<!--        WHERE member_id = #{id} and member_status = 'Y' and is_main = 'Y'-->
<!--    </select>-->

    <select id="findById" resultType="com.goodday.proj.api.member.dto.MemberSessionInfo">
        select member_no, member_id, nickname, admin
        from member
        where member_id = #{id} and member_status = 'Y'
    </select>

    <select id="findPwdById" resultType="string">
        select pwd from member where member_id = #{id} and member_status = 'Y'
    </select>

    <select id="findByEmail" resultType="com.goodday.proj.api.member.dto.MemberSessionInfo">
        select member_no, member_id, nickname, admin
        from member
        where email = #{email} and member_status = 'Y'
    </select>

<!--    <select id="findByEmail" resultMap="memberEmailResultSet">-->
<!--        SELECT distinct member.MEMBER_NO, MEMBER_ID, PWD, NAME, ENROLL_DATE, NICKNAME, email, PHONE, ADMIN, address-->
<!--        FROM member-->
<!--                 LEFT JOIN address ON member.MEMBER_NO = address.MEMBER_NO-->
<!--        WHERE email = #{email} and member_status = 'Y' and is_main = 'Y'-->
<!--    </select>-->

    <select id="addressList" parameterType="com.goodday.proj.api.member.model.Member" resultType="com.goodday.proj.api.member.model.Address">
        select address_no, address, is_main
        from address join member using(member_no)
        where email = #{email}
    </select>

    <resultMap id="memberResultSet" type="com.goodday.proj.api.member.model.Member">
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="memberId" column="MEMBER_ID"/>
        <result property="pwd" column="PWD"/>
        <result property="name" column="NAME"/>
        <result property="enrollDate" column="ENROLL_DATE"/>
        <result property="nickname" column="NICKNAME"/>
        <result property="email" column="EMAIL"/>
        <result property="phone" column="PHONE"/>
        <result property="admin" column="ADMIN"/>
        <result property="memberStatus" column="MEMBER_STATUS"/>
        <collection column="email" property="address" ofType="com.goodday.proj.api.member.model.Address" javaType="List" select="addressList"/>
    </resultMap>

    <select id="findMemberByNo" resultMap="memberResultSet">
        SELECT distinct member.MEMBER_NO, MEMBER_ID, PWD, NAME, ENROLL_DATE, NICKNAME, email, PHONE, ADMIN, address
        FROM member
                 LEFT JOIN address ON member.MEMBER_NO = address.MEMBER_NO
        WHERE member.member_no = #{memberNo} and member_status = 'Y' and is_main = 'Y'
    </select>

    <update id="updatePwd" parameterType="Map">
        update member
        set PWD = #{pwd}
        where member_no = #{memberNo}
    </update>

</mapper>